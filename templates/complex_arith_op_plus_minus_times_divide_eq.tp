// operator+=
//% [T1,T2] = varargin{1:2};
//% T = rm_comp(T1);
constexpr void operator+=(@T1@_O &z, @T2@_I x)
{
    z.real() += x;
}

constexpr void operator-=(@T1@_O &z, @T2@_I x)
{
    z.real() -= x;
}

constexpr void operator*=(@T1@_O &z, @T2@_I x)
{
    z *= (@T@)x;
}

constexpr void operator/=(@T1@_O &z, @T2@_I x)
{
    z /= (@T@)x;
}

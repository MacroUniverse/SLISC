//% types = {'Char'; 'Int'; 'Llong'; 'Doub'; 'Comp'};
//%------------------------------
//% T = varargin{:};
//% if is_Char(T)
inline void matt_read_scalar(Char_O s, ifstream &m_in)
{
    Int temp; m_in >> temp; s = (Char)temp;
}
//% elseif is_Int(T) || is_Llong(T) || is_Doub(T)
inline void matt_read_scalar(@T@_O s, ifstream &m_in)
{
    m_in >> s;
}
//% elseif is_Comp(T)
inline void matt_read_scalar(@T@_O c, ifstream &m_in)
{
    Doub cr = 0, ci = 0;
    Char ch;
    m_in >> cr;
    ch = m_in.get();
    if (ch == Matt::dlm) {
        c = cr; return;
    }
    m_in >> ci;
    if (ch == '-')
        ci *= -1.;
    c = Comp(cr, ci);
    m_in.ignore(100, Matt::dlm);
}
//% end

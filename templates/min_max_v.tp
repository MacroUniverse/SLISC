//% types = {
//%     'Int'; 'Llong'; 'Doub';
//% };
//%--------------------------
//% T = varargin{:};
//% if is_real(T) && ~is_Bool(T)
inline @T@ max_v(const @T@ *v, Long_I N)
{
#ifdef SLS_CHECK_BOUNDS
    if (N <= 0) SLS_ERR("illegal length!");
#endif
    @T@ s = v[0];
    for (Long i = 1; i < N; ++i) {
        if (s < v[i])
            s = v[i];
    }
    return s;
}

inline @T@ max_v(const @T@ *v, Long_I N, Long_I step)
{
#ifdef SLS_CHECK_BOUNDS
    if (N <= 0) SLS_ERR("illegal length!");
#endif
    @T@ s = v[0];
    for (Long i = step; i < N*step; i += step) {
        if (s < v[i])
            s = v[i];
    }
    return s;
}
//% else
//%     error('not implemented!');
//% end

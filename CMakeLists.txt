cmake_minimum_required(VERSION 3.10)
project(SLISC0)

set(CMAKE_CXX_COMPILER "/usr/bin/g++")

set(CMAKE_CXX_FLAGS "-std=c++11")

# include_directories(SLISC)

# CBLAS
add_definitions(-D SLS_USE_CBLAS)
list(APPEND LIBS blas)
# LAPACKE
add_definitions(-D SLS_USE_LAPACKE)
list(APPEND LIBS lapacke)
# Boost
# add_definitions(-D SLS_USE_BOOST)
# include_directories(../boost-headers)
# list(APPEND LIBS boost_system boost_filesystem)
# GSL
add_definitions(-D SLS_USE_GSL)
list(APPEND LIBS gsl)
# Eigen
add_definitions(-D SLS_USE_EIGEN)
include_directories(../EigenTest/Eigen)
# quad math
# add_definitions(-D SLS_USE_QUAD_MATH)
# add_compile_options(-fext-numeric-literals)
# list(APPEND LIBS quadmath)
# Arpack
add_definitions(-D SLS_USE_ARPACK)
include_directories(../Arpack_test/include)
list(APPEND LIBS arpack gfortran)
# Arb
add_definitions(-D SLS_USE_ARB)
include_directories(/usr/include/flint/)
list(APPEND LIBS flint mpfr gmp flint-arb) # replace flint-arb with arb if compiled yourself
# Address Sanitizer
add_definitions(-D SLS_USE_ASAN)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fno-omit-frame-pointer -fsanitize=address")
set(CMAKE_LINKER_FLAGS "${CMAKE_LINKER_FLAGS} -fno-omit-frame-pointer -fsanitize=address -static-libasan")
# Matfile
# (conflicts with boost_filesystem.so other than version 1.56.0)
add_definitions(-D SLS_USE_MATFILE)
include_directories(../MatFile_linux/include)
link_directories(../MatFile_linux/bin)
list(APPEND LIBS mat mx)
set(CMAKE_INSTALL_RPATH ../MatFile_linux/bin)
# SQLite
add_definitions(-D SLS_USE_SQLITE)
list(APPEND LIBS sqlite3)

add_compile_options(-Wall -Wno-reorder -Wno-misleading-indentation -fopenmp -g -fmax-errors=2)

file(GLOB SOURCES "test/*.cpp" "main.cpp")

add_executable(main.x ${SOURCES})

# precompile header (total compilation time remains the same, but single recompilation might be slower. Can help to check `#pragma once` and `inline` before functions if they are missing)
# file(GLOB SLISC_HEADERS "SLISC/*.h")
# file(GLOB STL_HEADERS "/usr/include/c++/9/*")
# list(REMOVE_ITEM STL_HEADERS /usr/include/c++/9/backward /usr/include/c++/9/bits /usr/include/c++/9/debug /usr/include/c++/9/decimal /usr/include/c++/9/experimental /usr/include/c++/9/ext /usr/include/c++/9/parallel /usr/include/c++/9/profile /usr/include/c++/9/pstl /usr/include/c++/9/tr1 /usr/include/c++/9/tr2)
# target_precompile_headers(main.x PRIVATE ${STL_HEADERS} ${SLISC_HEADERS})

# link
target_link_libraries(main.x ${LIBS})
